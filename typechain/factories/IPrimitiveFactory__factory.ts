/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IPrimitiveFactory } from "../IPrimitiveFactory";

export class IPrimitiveFactory__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPrimitiveFactory {
    return new Contract(address, _abi, signerOrProvider) as IPrimitiveFactory;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "engine",
        type: "address",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [],
    name: "args",
    outputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "engine",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
    ],
    name: "getEngine",
    outputs: [
      {
        internalType: "address",
        name: "engine",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
